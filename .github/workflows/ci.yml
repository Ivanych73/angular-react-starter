name: angular test and build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

defaults:
  run:
    working-directory: './angular/'

jobs:
  test_and_build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Get start time
      id: start-time
      working-directory: './'
      run: echo "::set-output name=start_time::$(date +%s)"

    - uses: actions/checkout@v3

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './angular/package-lock.json'
    
    - name: Install dependencies
      run: npm ci

    - name: Run tests
      continue-on-error: true
      id: run_tests
      run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless

    - name: Send email on test failure
      if: ${{ steps.run_tests.outcome == 'failure' }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{secrets.MAIL_SMTP_SERVER}}
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
        password: ${{secrets.MAIL_PASSWORD}}
        subject: running tests in ${{ github.job }} job of ${{ github.repository }} failed!
        to: ${{secrets.MAIL_USERNAME}}
        from: ${{secrets.MAIL_FROM_FIELD}}
        secure: true
        body: running tests in ${{ github.job }} job of ${{ github.repository }} failed!
    
    - name: Exit on test failure
      if: ${{ steps.run_tests.outcome == 'failure' }}
      run: exit 1

    - name: Run build
      continue-on-error: true
      id: run_build
      run: npm run build

    - name: Send email on build failure
      if: ${{ steps.run_build.outcome == 'failure' }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{secrets.MAIL_SMTP_SERVER}}
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
        password: ${{secrets.MAIL_PASSWORD}}
        subject: running build in ${{ github.job }} job of ${{ github.repository }} failed!
        to: ${{secrets.MAIL_USERNAME}}
        from: ${{secrets.MAIL_FROM_FIELD}}
        secure: true
        body: running build in ${{ github.job }} job of ${{ github.repository }} failed!
    
    - name: Exit on build failure
      if: ${{ steps.run_build.outcome == 'failure' }}
      run: exit 1

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/angular-demo

    - name: Build and push Docker image
      continue-on-error: true
      id: build_push_docker
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Send email on build docker failure
      if: ${{ steps.build_push_docker.outcome == 'failure' }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{secrets.MAIL_SMTP_SERVER}}
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
        password: ${{secrets.MAIL_PASSWORD}}
        subject: running build and push docker image in ${{ github.job }} job of ${{ github.repository }} failed!
        to: ${{secrets.MAIL_USERNAME}}
        from: ${{secrets.MAIL_FROM_FIELD}}
        secure: true
        body: running build and push docker image in ${{ github.job }} job of ${{ github.repository }} failed!
    
    - name: Exit on build docker failure
      if: ${{ steps.build_push_docker.outcome == 'failure' }}
      run: exit 1

    - name: Get duration
      id: duration
      run: |
        start=${{steps.start-time.outputs.start_time}}
        finish=$(date +%s)
        duration=$(($finish-$start))
        readble_duration=$(date -d@$duration -u +%H:%M:%S)
        echo "::set-output name=duration::$readble_duration"
      shell: bash

    - name: Send email on success
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{secrets.MAIL_SMTP_SERVER}}
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
        password: ${{secrets.MAIL_PASSWORD}}
        subject: ${{ github.job }} job of ${{ github.repository }} succeeded!
        to: ${{secrets.MAIL_USERNAME}}
        from: ${{secrets.MAIL_FROM_FIELD}}
        secure: true
        body: ${{ github.job }} job of ${{ github.repository }} succeeded! Total duration took (hours:minutes:seconds) ${{steps.duration.outputs.duration}}